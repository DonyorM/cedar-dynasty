name: hyperfiddle/electric-fiddle
on:
  push:
    branches:
      - "main"
  pull_request:
jobs:
  deploy:
    name: "Fly deploy, domain: hello-fiddle"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive # includes HFQL
          ssh-key: ${{ secrets.HYPERFIDDLE_ORG_DEPLOY_KEY }}
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: NO_COLOR=1 flyctl deploy --remote-only --config src/hello-fiddle/fly.toml --build-arg hfql_ssh_prv_key="$HFQL_SSH_PRV_KEY"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          #DATOMIC_DEV_LOCAL_USER: ${{ secrets.DATOMIC_DEV_LOCAL_USER }}

  # docker_build:
  #   needs: [jvm, browser]
  #   if: success()
  #   runs-on: ubuntu-latest
  #   name: Build and push Docker image
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: Set Environment Variables
  #       run: echo "HYPERFIDDLE_ELECTRIC_SERVER_VERSION=$(git describe --tags --long --always --dirty)" >> $GITHUB_ENV

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - uses: superfly/flyctl-actions/setup-flyctl@master
  #     - run: flyctl auth docker
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         tags: registry.fly.io/electric-demo:latest
  #         build-args: |
  #           HYPERFIDDLE_ELECTRIC_SERVER_VERSION=${{ env.HYPERFIDDLE_ELECTRIC_SERVER_VERSION }}

  # deploy:
  #   needs: [docker_build]
  #   if: success() && github.ref == 'refs/heads/master'
  #   name: Deploy Docker image to Fly.io
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: superfly/flyctl-actions/setup-flyctl@master
  #     - run: flyctl deploy --image registry.fly.io/electric-demo:latest
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
